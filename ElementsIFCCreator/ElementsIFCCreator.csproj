<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <GenerateRuntimeConfigurationFiles>true</GenerateRuntimeConfigurationFiles>
    <AWSProjectType>Lambda</AWSProjectType>
    <!-- This property makes the build directory similar to a publish directory and helps the AWS .NET Lambda Mock Test Tool find project dependencies. -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
    <!-- Generate ready to run images during publishing to improve cold start time. -->
    <PublishReadyToRun>true</PublishReadyToRun>
  </PropertyGroup>
	
	<PropertyGroup>
		<Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
		<Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
	</PropertyGroup>


	<ItemGroup>
    <PackageReference Include="Amazon.Lambda.Annotations" Version="1.3.0" />
    <PackageReference Include="Amazon.Lambda.Core" Version="2.2.0" />
    <PackageReference Include="Amazon.Lambda.Serialization.SystemTextJson" Version="2.4.1" />
	<PackageReference Include="Amazon.Lambda.TestUtilities" Version="2.0.0" />
    <PackageReference Include="Amazon.Lambda.APIGatewayEvents" Version="2.7.0" />
    <PackageReference Include="GeometryGymIFC_Core" Version="24.5.8" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="6.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
	  <PackageReference Include="FormaAPI" Version="0.1.1" />
	  <PackageReference Include="FormaTypes" Version="0.1.1" />
	  <PackageReference Include="FormaRestSharp108Impl" Version="0.1.1" />
	  <PackageReference Include="FormaNewtonsoftJson13Impl" Version="0.1.1" />
	  <PackageReference Include="SharpGLTF.Core" Version="1.0.0-alpha0031" />
  </ItemGroup>


	<!--<ItemGroup>
		<ContentWithTargetPath Include="$(SolutionDir)GLTFInterface/SharpGLTFWrapper/bin/$(ConfigurationName)/$(TargetFramework)/SharpGLTFWrapper.dll">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>SharpGLTFWrapper/SharpGLTFWrapper.dll</TargetPath>
		</ContentWithTargetPath>
		<ContentWithTargetPath Include="$(SolutionDir)GLTFInterface/SharpGLTFWrapper/bin/$(ConfigurationName)/$(TargetFramework)/SharpGLTF.Core.dll">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>SharpGLTFWrapper/SharpGLTF.Core.dll</TargetPath>
		</ContentWithTargetPath>
		<ContentWithTargetPath Include="$(SolutionDir)GLTFInterface/SharpGLTFWrapper/bin/$(ConfigurationName)/$(TargetFramework)/System.Text.Json.dll">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
			<TargetPath>SharpGLTFWrapper/System.Text.Json.dll</TargetPath>
		</ContentWithTargetPath>
	</ItemGroup>-->

<!--<ItemGroup>
	<None Update="aws-lambda-tools-defaults.json" CopyToOutputDirectory="PreserveNewest" />
	<None Update="App.config" CopyToOutputDirectory="PreserveNewest" />
</ItemGroup>-->
</Project>